namespace Yang.CSharp.Notes
{
// 抽象类和抽象方法
// abstract
// 抽象类 不能实例化
// 抽象方法只能在抽象类中声明，是个纯虚方法，必须在子类中实现

// 接口
// interface 自定义类型
// 是行为的抽象
// 不包含成员变量
// 仅包含方法，属性，索引器，事件。成员不能实现，建议不写修饰符，默认为 public


// 相同点：
// 1，都可以被继承
// 2，都不能被实例化
// 3，都可以包含方法声明
// 4，子类必须实现未实现的方法
// 5，都遵循里氏替换原则


// 区别：
// 1，抽象类中可以有构造函数，接口不能
// 2，抽象类只能被单一继承，接口可以被继承多个
// 3，抽象类中可以有成员变量，接口不能
// 4，抽象类中可以声明成员方法，虚方法，抽象方法，接口只能声明没有实现的抽象方法
// 5，抽象类方法可以使用访问修饰符，接口不建议，默认 public


// 如何选择：
// 表示对象的用抽象类，表示行为拓展的用接口
// 不同对象拥有的共同行为，往往使用接口实现

// eg：动物是一类对象，选择抽象类
//     飞是一个行为，选择接口

    internal class Notes_AbstractClassAndInterface
    {
        private static void Main(string[] args)
        {
        }
    }
}